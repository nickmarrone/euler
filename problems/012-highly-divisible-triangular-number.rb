# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle
# number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#  1: 1  3: 1,3  6: 1,2,3,6 10: 1,2,5,10 15: 1,3,5,15 21: 1,3,7,21 28: 1,2,4,7,14,28 We can see that
# 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?

require '../lib/fixnum'
require '../lib/triangular'

# Test to make sure my triangular number generator works
tri_test = TriangularSequence.new
expected = [1, 3, 6, 10, 15, 21, 28]

(0..5).each do |index|
  num = tri_test.next
  unless num == expected[index]
    puts "TriangularNum ##{index+1} was #{num} but should be #{expected[index]}"
  end
end

# Find the first triangular number with more than 500 divisors
tri = TriangularSequence.new
num = 0

loop do
  num = tri.next
  p num.number_of_divisors

  break if num.number_of_divisors > 500
end

puts num
